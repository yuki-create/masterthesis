・バグ
固定する点によって、初期状態でばねが平衡状態のはずなのに釣り合わない。
fixed_p = 0 OK.
5 x 点が消えた
14 x 運動しだす
別の点を固定しても、index0の点に引っ張られる。index0の点も他の点に遅れて運動する。
左下にidx24, 右上にidx0を配置しidx0のみを固定した場合は、右下のidx24に引っ張られる。
idx24のみ固定した場合は動かない。
！初期座標をいくつか試したところ、idx0でなく原点に引っ張られている。
！原点に位置する点を固定すると動かない。
！固定した点に近い点から運動を始める。
line223: ku2[i] = dt*F(tmp_x,tmp_y,tmp_u,i);の、tmp_xたちはローカル変数のため、関数Fから参照ができていないことが原因か？
/* update k2 vectors */
for(i=0;i<N;i++){
  for(j=0;j<fixed_num;j++){
    if(i==fixed_p[j]){ fixed_flag = 1; break; }
  }
  if(fixed_flag == 0){
    tmp_u[i] = u[i] + ku1[i]/2;
    tmp_x[i] = x[i] + kx1[i]/2;
    tmp_v[i] = v[i] + kv1[i]/2;
    tmp_y[i] = y[i] + ky1[i]/2;
  }
  fixed_flag = 0;
}
固定点に関してはこの処理が飛ばされるので、tmp_u~y[i]は初期値の0のまま。
関数fにも0が渡され、固定点の座標は(0,0)として扱われているのでは？
!  for(j=0;j<fixed_num;j++){
!    if(i==fixed_p[j]){ fixed_flag = 1; break; }
!  }
!  if(fixed_flag == 0){
!  ...
!  }
!  fixed_flag = 0;
!を削除することで解決。

・差分
関数fの減衰項の符号を反転（+ -> -）、依然原点に向かって振動
オイラー法での実装eular()で原点に吸い込まれるように運動するバグを解消、運動の正常化を確認。
！eular法実装でも固定点をどこにとっても、n=1stepから座標が(0,0)になっていた。
！原因は、最後のx[i],y[i]などの更新を固定点に対してもしていたこと。固定点への代入を避ける。
rk4()の原点周りに質点が集合するバグを解消。rk4()今のところ異常なし。
