・差分
NARMA30の実装
ずらす初期値、ずらす点の決め方について
initial_dが2ノルムと同じオーダーになるように設定する。
leのバグを修正(Fx,Fy内のarrayl_idxへの代入位置)
leは正常化したが、近似精度はゴミになった。
バグを含んでgamma1[-1]を使っていた時の近似が非常に良かった。(1203after)
やはり同様にgamma=5.000004675813と一様に設定すると、鬼みたいに精度が良い。

---1127before---
N=36, M=60
initial_d=0.000000000001
le=-0.245005384851
gamma1[-1]=0.000000000000

---1203after---
N=36, M=60
initial_d=0.000000000001
le=-0.245005384851
gamma1[-1]=5.000004675813 <-複数回実行しても変わらない
--- ---
・次は高速化
rk4でcblasを使うと結果が変わる。実行時間はさして変わらないのでcblasは使わない。

・初期値を入力する点を変えてleの違いをみる(36回)
ms.cの中でN回繰り返し、leと近似誤差の平均を出すようにした。
leは変わるが近似誤差は変化しないので、leのみ計算し直す。

・次はテストを行うパラメータ範囲の決定

1127before(精度悪くle妥当)と、1203after(精度良くle小さすぎ)の比較
*初期値は同じ (initial?d, l[0], l_d[0])
*最初の1000ステップでlの波形が異なる
*inputは同じ
*force_x[0]は同じ
*getSpringLengthの関数は全く同じ
*ku1[N]などの初期化関係ない
!!1127beforeではFyでもforceを加えていたのに対し、1203afterでは足していなかった
->1203afterでもy方向に外力を加えたが、l[0]の波形は異なる
!!x座標の変異も最初から異なる
!!初期値誤差をはずしても2つの波形は異なる
!初期値誤差とrk4()を外すとl[0]はどちらも1から動かない
->rk4に問題あり
!rk4()ないの kx1[0]が異なる
!rk4()内のku1[0]が異なる
!Fx　or fで不具合が発生していると思われるが、テスト方法が難しい。

次はFx,fの挙動を調べるテストから
G:point1, point1だけ繋ぎ、Fxの結果を出力。
!idx==0or1,idx2==1or0のときFxは一致
!idx=0or1, idx2=0or1のとき以外はFx内の計算を行なっていない
!idx==0or1,idx2==1or0のときFyは一致
!idx=0or1, idx2=0or1のとき以外はFy内の計算を行なっていない
!ku1[0]も一致。
G:格子状に戻す(N=9)
!ku1[0]が一致した ->Fx,Fyの戻り値を変数ansに入れただけ
!kx1[0]が一致した
!!l[0]が一致した (beforeの方に同じになった)
!!le=-0.275037　完全一致
!!初期値誤差10^{-8}でも10^{-12}でもleは同程度
---1127beforeの結果---

(0-1のみ繋ぐ)N=4, M=4
initial_d=0.000000000001
le=-0.690104247418

N=4, M=4
initial_d=0.000000000001
le=-0.455897786989

N=3
initial_d=0.000000000001
le=-0.273954906212

N=16, M=24
initial_d=0.000000000001
le=-0.249695389020

------

!!N=3で完全一致
!!しかし、N=3以外では波が異なる。
---以下N=4でテスト---
0-1のみつなげた場合でも、l[0]が異なる
0-1のみつなげた場合でも、idx1=0&&idx2=1のときのFxが異なる
0-1のみつなげた場合でも、idx1=0&&idx2=1のときのfが異なる
f呼び出し回数、呼び出される時のidx1,idx2は同じ
!!Fxで呼び出すgamma1の値が異なる.afterではgamma1=1.0が混ざっている
!? gamma1[-1]が使われている？
!!!Fx, Fyの中で、arrayl_idx = p2l_mat[idx1][idx2]を初期化時点(idx1=idx2=0)でしていたため、
!!!idx1とidx2を回してG[idx1][idx2]=1になったときにもarrayl_idx=-1のままだった
!!!kはFx,Fyからfに渡したidx1,idx2を使うので、ばね定数の違いは反映されていたが
!!!Fx,Fyの中で取得するgamma1[arrayl_idx]については,gamma1[-1]しか使っていなかった
!!!gamma1[-1]の初期値が異なっていたので、ここが反映されてl[0]の波形が異なったと思われる
->ついに波形が一致！
N=4で全部ばねつなぐ
---beforeの結果---
N=4, M=4
initial_d=0.000000000001
le=-0.456172898243
afterと一致

N=36, M=60
initial_d=0.000000000001
le=-0.245005384851
afterと一致

次やること
*バイアスを入れる
lyapunov指数の計算と初期値を、以前にできていた時のと見比べる
同じk,gammaのパラメータセットで、固定点を除いた34回、初期座標をずらす点を変えて試行する。
(ms.c内で繰り返す)

・rk4での配列の宣言、初期化を軽くする
->入力時系列を乱数で作る -失敗。narmaモデルの出力もホワイトノイズのようになる。近似誤差はnan。
->MCのテストを実装する

・バグ
固定点がなくても、全く変異のないばねがある。x方向のばねが動かない。
→y方向にも外力をかけてみると、全てのばねが振動した
->ばねの出力以外にバイアスを入れた

以前のle計算は、2ノルムが振動し続けていた
今は同じパラメータセットで試行して、2ノルムは消滅する。
!updateLyapunovExponentの中で、array1[0]とarray2[0]は一致する
!今と以前の実行結果の違いは、
！今：軌道が一致し2ノルムが完全消滅　以前：lとl_dが最後まで一致しない
!今：近似精度がはちゃめちゃに良い　以前：近似が上手くいかない
プログラムの変更点はなんだ？
12/11のコミット時点では、N=6で同じような傾向（le=-7.5）



5000/5000/1000の期間が上手くいく
5000/5000/5000でも良さそう
しかし、道理として1000/5000/5000でやるべき
